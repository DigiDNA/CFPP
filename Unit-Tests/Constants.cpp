/*******************************************************************************
* Copyright (c) 2014, Jean-David Gadina - www.xs-labs.com / www.digidna.net
* Distributed under the Boost Software License, Version 1.0.
*
* Boost Software License - Version 1.0 - August 17th, 2003
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
******************************************************************************/

/*!
* @file        Constants.cpp
* @copyright   (c) 2014 - Jean-David Gadina - www.xs-labs.com / www.digidna.net
*/

#include "Constants.hpp"

#ifndef _WIN32

#define GET_CONST( _type_, _const_, _func_ )    \
 _type_ _func_( void )                          \
{                                               \
    return _const_;                             \
}

#else

#include <Windows.h>

static HMODULE mod = nullptr;

#define GET_CONST( _type_, _const_, _func_ )                                            \
 _type_ _func_( void )                                                                  \
{                                                                                       \
    if( mod == nullptr )                                                                \
    {                                                                                   \
        mod = GetModuleHandleA( "CoreFoundation.dll" );                                 \
    }                                                                                   \
                                                                                        \
    static _type_ value = nullptr;                                                      \
                                                                                        \
    if( value == nullptr )                                                              \
    {                                                                                   \
        value = *( reinterpret_cast< _type_ * >( GetProcAddress( mod, #_const_ ) ) );   \
    }                                                                                   \
                                                                                        \
    return value;                                                                       \
}

#endif

GET_CONST( CFBooleanRef, kCFBooleanTrue,                            GetCFBooleanTrue )
GET_CONST( CFBooleanRef, kCFBooleanFalse,                           GetCFBooleanFalse )
GET_CONST( CFStringRef,  kCFErrorLocalizedDescriptionKey,           GetCFErrorLocalizedDescriptionKey )
GET_CONST( CFStringRef,  kCFErrorLocalizedFailureReasonKey,         GetCFErrorLocalizedFailureReasonKey )
GET_CONST( CFStringRef,  kCFErrorLocalizedRecoverySuggestionKey,    GetCFErrorLocalizedRecoverySuggestionKey )

