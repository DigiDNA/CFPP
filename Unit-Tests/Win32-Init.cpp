/*******************************************************************************
* Copyright (c) 2014, Jean-David Gadina - www.xs-labs.com / www.digidna.net
* Distributed under the Boost Software License, Version 1.0.
*
* Boost Software License - Version 1.0 - August 17th, 2003
*
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
*
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
******************************************************************************/

/*!
* @file        Win32-Init.cpp
* @copyright   (c) 2014 - Jean-David Gadina - www.xs-labs.com / www.digidna.net
* @abstract    Win32 initialization routines
*/

#include <Windows.h>
#include <string>

struct CFPP_Win32Init
{
    CFPP_Win32Init( void )
    {
        char      * commonProgFiles;
        std::string mobileSupport;
        std::string appleSupport;

        #ifdef _WIN64
        commonProgFiles = nullptr;
        #else
        commonProgFiles = getenv( "COMMONPROGRAMFILES(x86)" );
        #endif

        if( commonProgFiles == nullptr )
        {
            commonProgFiles = getenv( "COMMONPROGRAMFILES" );
        }

        mobileSupport = std::string( commonProgFiles ) + "\\Apple\\Mobile Device Support";
        appleSupport  = std::string( commonProgFiles ) + "\\Apple\\Apple Application Support";

        SetDllDirectoryA( mobileSupport.c_str() );
        SetDllDirectoryA( appleSupport.c_str() );
    }
};

static struct CFPP_Win32Init init;